*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cprogres.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cprogressbar AS container 		&& A basic progress bar
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpBar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPercent" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: release		&& Releases a FormSet or Form from memory.
		*m: setrange		&& Sets the min/max range
		*m: setvalue		&& Sets the current value of the progress bar. Must be between nMin and nMax values.
		*p: autocenter		&& Centers the progressbar on the container.
		*p: nmax		&& The maximum value for the progress bar
		*p: nmin		&& The minimum value for the progress bar
		*p: version		&& The version of this class.
	*</DefinedPropArrayMethod>

	PROTECTED nmax,nmin,version
	autocenter = .T.		&& Centers the progressbar on the container.
	BackStyle = 1
	BorderWidth = 1
	Height = 22
	Name = "cprogressbar"
	nmax = 0		&& The maximum value for the progress bar
	nmin = 100		&& The minimum value for the progress bar
	SpecialEffect = 1
	version = 1.1.000		&& The version of this class.
	Width = 225

	ADD OBJECT 'lblPercent' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "0%", ;
		FontName = "Century Gothic", ;
		FontSize = 12, ;
		ForeColor = 255,255,255, ;
		Height = 24, ;
		Left = 96, ;
		Name = "lblPercent", ;
		Top = 0
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'shpBar' AS shape WITH ;
		BackColor = 64,0,128, ;
		BackStyle = 1, ;
		BorderStyle = 0, ;
		BorderWidth = 0, ;
		Height = 19, ;
		Left = 2, ;
		Name = "shpBar", ;
		Top = 2, ;
		Width = 25
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Init
		LPARAMETERS tnMin, tnMax, tlCenter
		*********************************************
		*	Progressbar Class						*
		*	By Michael G. Emmons			 		*
		*	mgemmons@netrunner.net		 			*
		*										 	*
		*	(c)1997 Michael G. Emmons		 		*
		*										 	*
		*	Permission to use this class is	 		*
		*	granted to anyone as long as this		*
		*	header is left intact.				 	*
		*										 	*
		*	I'm always interested in talking	 	*
		*	about foxpro. If you have any 		 	*
		*	questions or comments drop me 			*
		*	a line.								 	*
		*********************************************
		
		If Type('tnMin') # 'N' or Type('tnMax') # 'N'
			tnMin = 0
			tnMax = 100
		EndIf
		
		If tlCenter <> this.Autocenter
			this.Autocenter = tlCenter
		EndIf
		
		this.SetRange(tnMin, tnMax)
		
		If this.AutoCenter
			this.Top = Int(this.parent.Height/2)- Int(this.Height/2)
			this.Left = Int(this.parent.Width/2) - Int(this.Width/2)
		EndIf
		this.Visible = .T.
		Return .T.
		
	ENDPROC

	PROCEDURE release		&& Releases a FormSet or Form from memory.
		RELEASE this
		
	ENDPROC

	PROCEDURE setrange		&& Sets the min/max range
		LPARAMETERS tnMin, tnMax
		
		If Type('tnMin') # 'N' OR Type('tnMax') # 'N' 
			Return .F.
		EndIf
		
		If tnMin >= tnMax
			Return .F.
		EndIf
		
		this.nMin = tnMin
		this.nMax = tnMax
		
		
		Return .T.
		
	ENDPROC

	PROCEDURE setvalue		&& Sets the current value of the progress bar. Must be between nMin and nMax values.
		LPARAMETERS tnValue
		LOCAL lnWidth, lnPercent
		
		If Type('tnValue') # 'N' OR !Between(tnValue, this.nMin, this.nMax)
			Return .F.
		EndIf
		
		lnPercent = Int(tnValue/this.nMax * 100)
		lnWidth   = Int(lnPercent/100 * this.Width) && - 2
		this.shpBar.Width = lnWidth
		this.lblPercent.Caption = Alltrim(Str(lnPercent))+"%"
		
		Return .T.
		
	ENDPROC

	PROCEDURE shpBar.Init
		this.Width = 0
		
	ENDPROC

ENDDEFINE

DEFINE CLASS cprogresscontainer AS container 		&& A container class for the progressbar class. Adds funtionality such as a status bar and title bar.
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cntProgressBar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntStatus" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: release		&& Releases a FormSet or Form from memory.
		*m: setrange		&& Sets the minimum/maximum values for the progress bar.
		*m: setstatus		&& Sets the status bar caption
		*m: settitle		&& Sets the title for the progressbar container. The default is "Progress Indicator"
		*m: setvalue		&& Sets the current value of the progress bar
		*p: autocenter		&& Specifies whether the Form object is automatically centered in the main Visual FoxPro window the first time it is displayed.
		*p: version		&& The version of this class.
	*</DefinedPropArrayMethod>

	autocenter = .T.		&& Specifies whether the Form object is automatically centered in the main Visual FoxPro window the first time it is displayed.
	BackStyle = 1
	BorderWidth = 3
	Height = 93
	Name = "cprogresscontainer"
	SpecialEffect = 0
	version = 1.1.000		&& The version of this class.
	Width = 250

	ADD OBJECT 'cntProgressBar' AS cprogressbar WITH ;
		autocenter = .F., ;
		Left = 5, ;
		Name = "cntProgressBar", ;
		Top = 36, ;
		Width = 240, ;
		lblPercent.Name = "lblPercent", ;
		shpBar.Name = "shpBar"
		*< END OBJECT: ClassLib="cprogres.vcx" BaseClass="container" />

	ADD OBJECT 'cntStatus' AS cstatusbar WITH ;
		Left = 5, ;
		Name = "cntStatus", ;
		Top = 73, ;
		lblStatus.Name = "lblStatus", ;
		lblStatusText.Name = "lblStatusText"
		*< END OBJECT: ClassLib="cprogres.vcx" BaseClass="container" />

	ADD OBJECT 'lblTitle' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Progress Indicator", ;
		FontName = "Century Gothic", ;
		FontSize = 12, ;
		Left = 55, ;
		Name = "lblTitle", ;
		Top = 9
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Init
		LPARAMETERS tnMin, tnMax, tlCenter
		*********************************************
		*	Progressbar Container Class				*
		*	By Michael G. Emmons			 		*
		*	mgemmons@netrunner.net		 			*
		*										 	*
		*	(c)1997 Michael G. Emmons		 		*
		*										 	*
		*	Persmission to use this class is	 	*
		*	granted to anyone as long as this		*
		*	header is left intact.				 	*
		*										 	*
		*	I'm always interested in talking	 	*
		*	about foxpro. If you have any 		 	*
		*	questions or comments drop me 			*
		*	a line.								 	*
		*********************************************
		
		*this.Zorder(0)	&& Make sure the bar is in front.
		If tlCenter <> this.AutoCenter
			this.AutoCenter = tlCenter
		EndIf
		
		this.SetRange(tnMin, tnMax)
		
		If this.AutoCenter
			this.Top = Int(this.parent.Height/2)- Int(this.Height/2)
			this.Left = Int(this.parent.Width/2) - Int(this.Width/2)
		EndIf
		
		this.Visible = .T.
		Return .T.
		
		
	ENDPROC

	PROCEDURE release		&& Releases a FormSet or Form from memory.
		RELEASE this
		
	ENDPROC

	PROCEDURE setrange		&& Sets the minimum/maximum values for the progress bar.
		LPARAMETERS tnMin, tnMax
		
		Return this.cntProgressbar.SetRange(tnMin,tnMax)
		
	ENDPROC

	PROCEDURE setstatus		&& Sets the status bar caption
		LPARAMETERS tcStatus
		
		If Type('tcStatus') # 'C'
			Return .F.
		EndIf
		
		tcStatus = Alltrim(tcStatus)
		this.cntStatus.SetStatus(tcStatus)
		
		
	ENDPROC

	PROCEDURE settitle		&& Sets the title for the progressbar container. The default is "Progress Indicator"
		LPARAMETERS tcTitle
		
		If Type('tcTitle') # 'C' 
			Return .F.
		EndIf
		
		this.lblTitle.Caption = Alltrim(tcTitle)
		this.lblTitle.Left = Int(this.Width / 2) - Int(this.lblTitle.Width / 2)
		
	ENDPROC

	PROCEDURE setvalue		&& Sets the current value of the progress bar
		LPARAMETERS tnValue
		
		Return this.cntProgressbar.SetValue(tnValue)
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS cstatusbar AS container 		&& A basic status bar class.
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblStatusText" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: setstatus		&& Sets the status text
		*p: version		&& The version of this class.
	*</DefinedPropArrayMethod>

	PROTECTED version
	Height = 15
	Name = "cstatusbar"
	SpecialEffect = 1
	version = 1.1.000		&& The version of this class.
	Width = 240

	ADD OBJECT 'lblStatus' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Status:", ;
		FontSize = 8, ;
		Left = 4, ;
		Name = "lblStatus", ;
		Top = 0
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblStatusText' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = " ", ;
		FontSize = 8, ;
		Left = 45, ;
		Name = "lblStatusText", ;
		Top = 0
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Init
		*********************************************
		*	Statusbar class            				*
		*	By Michael G. Emmons			 		*
		*	mgemmons@netrunner.net		 			*
		*										 	*
		*	(c)1997 Michael G. Emmons		 		*
		*										 	*
		*	Persmission to use this class is	 	*
		*	granted to anyone as long as this		*
		*	header is left intact.				 	*
		*										 	*
		*	I'm always interested in talking	 	*
		*	about foxpro. If you have any 		 	*
		*	questions or comments drop me 			*
		*	a line.								 	*
		*********************************************
		
	ENDPROC

	PROCEDURE setstatus		&& Sets the status text
		LPARAMETERS tcStatus
		
		If Type('tcStatus') # 'C'
			Return .F.
		EndIf
		
		this.lblStatusText.Caption = Alltrim(tcStatus)
		
		Return .T.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS frmexample AS form 		&& A form with progressbar examples.
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdExample1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExample2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtInfo" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	BorderStyle = 2
	Caption = "Progressbar Examples"
	DoCreate = .T.
	Height = 199
	Left = 0
	MaxButton = .F.
	MinButton = .F.
	Name = "frmexample"
	ShowTips = .T.
	Top = 0
	Width = 375
	_memberdata = <VFPData>

		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'cmdExample1' AS commandbutton WITH ;
		Caption = "Example 1", ;
		Height = 27, ;
		Left = 93, ;
		Name = "cmdExample1", ;
		ToolTipText = "Click this button to see an example of the simple progressbar.", ;
		Top = 152, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdExample2' AS commandbutton WITH ;
		Caption = "Example 2", ;
		Height = 27, ;
		Left = 210, ;
		Name = "cmdExample2", ;
		ToolTipText = "Click this button to see an example of the more advanced progressbarcontainer.", ;
		Top = 150, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtInfo' AS editbox WITH ;
		Height = 128, ;
		Left = 23, ;
		Name = "edtInfo", ;
		Top = 16, ;
		Value = Press a button for an example of the progressbar usage.  Be sure to look at the comments in each of the button's Click() methods for more information.  These classes were created by Michael G. Emmons (mgemmons@netrunner.net)., ;
		Width = 329
		*< END OBJECT: BaseClass="editbox" />
	
	PROCEDURE Init
		this.Visible = .T.
		
	ENDPROC

	PROCEDURE cmdExample1.Click
		*  Class.............: Progressbar Example
		*  Author............: Michael G. Emmons                  
		*  Project...........: Progressbar
		*  Created...........: 04/15/98  08:18:58
		*  Copyright.........: (c) 1998 Michael G. Emmons
		*  Notes.............: cProgressBar will accept three parameters. The first
		*							parameter is the minimum value that the bar can
		*							hold. The second parameter is the maximum value
		*							the bar can hold. And the third parameter is 
		*							determines whether the bar will be centered on
		*							the parent or not. A real life example of a use
		*							for this class would be if you have a function that 
		*							needs to scan through an entire table. You would 
		*							create the progressbar with 0 as your minimum value 
		*							and the RECCOUNT() of the table as your maximum value.
		*							At the top of the scan loop you would then use the
		*							SetValue() method to set the bar value to the RECNO().
		
		LOCAL lnCount
		
		** Create the progressbar and initialize it to zero.
		this.parent.AddObject('oProgress1','cprogressbar',0,100,.T.)
		
		** Loop through the FOR...ENDFOR setting the progress value each loop.
		lnCount = 100
		FOR x = 1 TO lnCount
			this.parent.oProgress1.SetValue(x)
			
			** Slow the loop down so you can see the progress
			WAIT " " TIMEOUT .1
		ENDFOR
		
		** Remove the progressbar from the form.
		this.parent.RemoveObject('oProgress1')
		
	ENDPROC

	PROCEDURE cmdExample2.Click
		*  Class.............: Progressbar Example 2
		*  Author............: Michael G. Emmons                  
		*  Project...........: Progressbar
		*  Created...........: 04/15/98  08:18:58
		*  Copyright.........: (c) 1998 Michael G. Emmons
		*  Notes.............: cProgressContainer will accept the same parameters that
		*						cProgressBar will. cPogressContainer, however, has added
		*						functionality such as the ability to set the progressbar
		*						title and the statusbar text. These two functions can be
		*						set through the SetTitle() and SetStatus() methods.
		
		LOCAL lnCount
		
		** Create the progressbar and initialize it to zero.
		this.parent.AddObject('oProgress2','cprogresscontainer',0,100,.T.)
		
		** Customize the title
		this.parent.oProgress2.SetTitle('Example 2')
		
		** Customize the status
		this.parent.oProgress2.SetStatus('Looping')
		
		** Loop through the FOR...ENDFOR setting the progress value each loop.
		lnCount = 100
		FOR x = 1 TO lnCount
			this.parent.oProgress2.SetValue(x)
			
			** Slow the loop down so you can see the progress
			WAIT " "TIMEOUT .1
		ENDFOR
		
		** Remove the progressbar from the form.
		this.parent.RemoveObject('oProgress2')
		
	ENDPROC

ENDDEFINE
