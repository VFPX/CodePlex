*==============================
* Localization strings
*==============================

* Strings inserted into BUILDER.DBF

#define ccLOC_CABUILDER_DESCRIP			'Sets properties for a CursorAdapter'
#define ccLOC_DEBUILDER_DESCRIP			'Sets properties for a DataEnvironment'

* Messages

#define ccLOC_CONNECTION_SUCCEEDED		'The connection was successful.'
#define ccLOC_CONNECTION_FAILED			'The connection failed. The error message from the data source was:' + ccCRLF + ccCRLF
#define ccLOC_CONNECTION_TEST			'Connection Test'
#define ccLOC_INVALID_CONNECTION        'The connection information is invalid.'
#define ccLOC_SPECIFY_JOINS				'You selected fields from more than one table and the builder cannot determine the joins between those tables, so you will need to add join information to the SelectCmd property manually.'
#define ccLOC_GETTING_TABLES			'Getting table names from data source...'
#define ccLOC_NOT_CURSORADAPTER			'<insert> is not a CursorAdapter subclass.'
#define ccLOC_CANT_CREATE_CURSOR		'The cursor could not be created, so the schema information cannot be read. The reason is:' + ccCR + ccCR + '<insert>'
#define ccLOC_CANT_LOAD_XML				'That file cannot be loaded by an XMLAdapter object. The reason is:' + ccCR + ccCR + '<insert>'
#define ccLOC_NO_SCHEMA					'There is no schema defined in the XML.'
#define ccLOC_BUILDER_INSTALLED			'The CursorAdapter and DataEnvironment builders have been installed.'
#define ccLOC_BAD_BUILDER_CALL			'The proper context for the CursorAdapter/DataEnvironment builder has not been established.'
#define ccLOC_MUST_USE_BUILDER			'When you turn this setting off for a CursorAdapter base class object, you must use the CursorAdapter builder to set the properties of this object.'
#define ccLOC_CANT_USE_BUILDER			'The DataEnvironment and CursorAdapter Builders cannot be used when a DataEnvironment subclass is used in a form. They can only be used with a base class DataEnvironment in a form or with DataEnvironment and CursorAdapter subclasses in the Class Designer.'
#define ccLOC_GETFILE_XMLXSD			'XML file (*.xml):XML;XML schema file (*.xsd):XSD'
#define ccLOC_SELECT_TABLE				'The XML schema contains more than one table. Please select the table you wish to use for this CursorAdapter.'
#define ccLOC_READING_SCHEMA			'Reading schema information...'
#define ccLOC_CANNOT_GET_FIELDS			'The builder cannot obtain a list of fields for <insert>.'
#define ccMSG_CURSORSCHEMA_TOO_LONG		'The CursorSchema property must be no longer than 255 characters.'
#define ccLOC_CANT_OPEN_DBC				'The <insert> database cannot be opened.'
#define ccLOC_INVALID_EXPR				'That expression is invalid.'
#define ccLOC_NO_CLASS_SELECTED			'No class was selected.'

* Captions

#define ccLOC_USE_CONNECTION_HANDLE		'Use existing connection \<handle'
#define ccLOC_USE_ADO_RS				'Use \<existing ADO Recordset'
#define ccLOC_BUILD_SCHEMA				'Buil\<d'

* Questions

#define ccLOC_REMOVE_CURSOR				'Remove <insert> from the Data Environment?'

* StatusBarText/ToolTipText values

#define ccLOC_TT_FETCH_SIZE				'Specifies the number of rows progressively fetched from the remote table result set. Setting to -1 retrieves the complete result set, limited by the setting for the MaxRecords property'
#define ccLOC_TT_FETCH_SIZE_ALL			'Check to retrieve the complete result set'
#define ccLOC_TT_MAX_RECORDS			'Specifies the maximum number of rows to fetch when result sets are returned. A value of -1 specifies that all rows are returned. Setting to a value of 0 specifies that the view is executed but no results are fetched'
#define ccLOC_TT_MAX_RECORDS_ALL		'Check to return all rows'
#define ccLOC_TT_USE_MEMO_SIZE			'Specifies the minimum size in bytes for returning result columns in memo fields'
#define ccLOC_TT_FETCH_AS_NEEDED		'.T. - Records are fetched as needed.  .F. - For remote views, the MaxRecords property determines the number of records fetched. For local views, all records are fetched'
#define ccLOC_TT_PREPARED				'Specifies whether to prepare SQL statements for subsequent REQUERY() function calls'
#define ccLOC_TT_FETCH_MEMO				'Specifies whether memo fields are fetched with view results'
#define ccLOC_TT_BUFFER_MODE_OVERRIDE	'Specifies the BufferMode property to override the setting at the form or formset level'
#define ccLOC_TT_FLAGS					'Specifies any flag settings that are available as specified by the nFlags parameter in the XMLUPDATEGRAM() function'
#define ccLOC_TT_SELECTCMD				'Specifies the command used for retrieving data'
#define ccLOC_TT_SELECTCMD_BUILDER		'Displays a builder for the SelectCmd setting'
#define ccLOC_TT_CURSORSCHEMA			'Specifies the structure to be used for the CursorAdapter'
#define ccLOC_TT_CURSORSCHEMA_BUILDER	'Creates the schema for the cursor from the SelectCmd setting'
#define ccLOC_TT_XMLSCHEMA_BUILDER		'Creates the schema for the cursor from an XML or XSD file'
#define ccLOC_TT_SEND_UPDATES			'Specifies whether to send an SQL update query to update tables'
#define ccLOC_TT_AUTO_UPDATE			'Specifies whether an update statement should be generated automatically'
#define ccLOC_TT_TABLES					'Specifies a comma-delimited list of the names of tables (required when using automatic updating for updates to work)'
#define ccLOC_TT_BATCH_UPDATE_COUNT		'Specifies the number of update statements sent to the remote data source for buffered tables'
#define ccLOC_TT_COMPARE_MEMO			'Specifies whether memo fields of type Memo, General, or Picture are included in the WHERE clause when using automatic updating'
#define ccLOC_TT_CONVERSION_FUNC		'Specifies a comma-delimited list of field and function name pairs. The functions consist of native Visual FoxPro or custom conversion functions to' + ' apply one or more cursor fields before sending them to the data source via an update, insert, or delete operation when using automatic updating'
#define ccLOC_TT_UPDATE_TYPE			'Specifies what to do with old data when performing updates: Update old data with new data, or delete old data and insert new data'
#define ccLOC_TT_WHERE_TYPE				'Specifies the fields that the WHERE clause consists of when used for updating tables: only the primary fields specified by the KeyFieldList property; ' + 'primary fields and any updatable fields; primary fields and other modified fields; or primary fields and a comparison of time stamps'
#define ccLOC_TT_ALLOW_COMMAND			'Specifies whether <insert> operations are allowed'
#define ccLOC_TT_AUTO_GEN_COMMAND		'Specifies whether a statement for <insert> operations should be generated automatically'
#define ccLOC_TT_DATASOURCETYPE_CMD		'Specifies the type of data source used for <insert> operations'
#define ccLOC_TT_CMD_COMMAND			'Specifies the command used for <insert> operations'
#define ccLOC_TT_DATASOURCETYPE			'Specifies the type of data source used for data retrieval'
#define ccLOC_TT_CLASS					'The class (and class library, in the case of a subclass) of the CursorAdapter'
#define ccLOC_TT_NAME					'The name of the CursorAdapter'
#define ccLOC_TT_ALIAS					'The alias of the cursor'
#define ccLOC_TT_USE_DE_DATASOURCE		'The data source of the associated data environment will be used as the data source for this CursorAdapter'
#define ccLOC_TT_ADD_CURSORADAPTER		'Adds a CursorAdapter subclass to the DataEnvironment'
#define ccLOC_TT_NEW_CURSORADAPTER		'Adds a CursorAdapter base class to the DataEnvironment'
#define ccLOC_TT_REMOVE_CURSORADAPTER	'Removes the selected CursorAdapter from the DataEnvironment'
#define ccLOC_TT_CURSORADAPTER_BUILDER	'Launches the builder for the selected CursorAdapter'
#define ccLOC_TT_HANDLESOURCE_ADO		'Specifies an existing ADO Recordset for the data source'
#define ccLOC_TT_HANDLESOURCE_ODBC		'Specifies an existing ODBC connection handle for the data source'
#define ccLOC_TT_CONNSTRING_ADO			'Specifies the connection string for an ADO connection'
#define ccLOC_TT_CONNSTRING_ODBC		'Specifies the connection string for an ODBC connection'
#define ccLOC_TT_BUILD_CONNSTRING		'Launches a builder for the connection string'
#define ccLOC_TT_TEST_CONNECTION		'Ensures the connection information is valid by attempting to connect to the data source'
#define ccLOC_TT_DBC					'The database container used for native access'
#define ccLOC_TT_CONN_TYPE				'The type of connection to use for the data source'
#define ccLOC_TT_CONN_TYPE_1_ADO		'Select this to use an existing ADO Recordset. Ensure the connection is open right now if you want the builder to use it for setting CursorAdapter SelectCmd and CursorSchema'
#define ccLOC_TT_CONN_TYPE_1_ODBC		'Select this to use an existing ODBC connection handle. Ensure the connection is open right now if you want the builder to use it for setting CursorAdapter SelectCmd and CursorSchema'
#define ccLOC_TT_CONN_TYPE_2			'Select this to use a DSN-based connection. In the case of ADO, this will use an ODBC driver and the MSDASQL provider'
#define ccLOC_TT_CONN_TYPE_3			'Select this to use a connection string-based connection'
#define ccLOC_TT_DSN					'Specifies the DSN to use for the data source'
#define ccLOC_TT_USER_ID				'Specifies the user ID for the data source'
#define ccLOC_TT_PASSWORD				'Specifies the password for the data source'
#define ccLOC_TT_USE_CONN_BUILDER       'Indicates that connection information is used by the builder only and no code is generated in the CursorAdapter'
#define ccLOC_TT_ALLOW_SIMULT_FETCH		'Specifies whether VFP permits simultaneous fetching with ODBC when a connection is shared'
#define ccLOC_TT_BREAK_ON_ERROR			'Specifies whether VFP permits errors to break at the location where they occurred or sends them to the cursor adapter'
#define ccLOC_TT_USE_SCHEMA				'Specifies the default setting to use for the lUseCursorSchema parameter in the CursorFill Method'
#define ccLOC_TT_MAP_VARCHAR			'Enables default data type mapping from ODBC and ADO data types to the Visual FoxPro Varchar data type'
#define ccLOC_TT_MAP_BINARY				'Enables default data type mapping from ODBC and ADO data types to Visual FoxPro Varbinary and Blob data types'
#define ccLOC_TT_USE_TRANSACTIONS		'Specifies whether the CursorAdapter uses transactions when sending Insert, Update or Delete commands through ADO or ODBC'
#define ccLOC_TT_REFRESH_COMMAND		'Specifies the command to use for the record Refresh performed by the RecordRefresh method'
#define ccLOC_TT_REFRESH_TIMESTAMP		'Specifies if the fields included in the TimestampFieldList Property are automatically refreshed when an Insert or Update command is executed'
#define ccLOC_TT_REFRESH_DATASOURCETYPE	'Specifies the data source type used for the RecordRefresh method'
#define ccLOC_TT_REFRESH_CMD_COMMAND	'Specifies the command used for <insert> refresh operations'
#define ccLOC_TT_FETCHMEMO_COMMAND		'Specifies the commands to use for the Memo fields fetch performed by the DelayedMemoFetch method'
#define ccLOC_TT_FETCHMEMO_DATASOURCETYPE	'Specifies the data source type used for the DelayedMemoFetch method'
#define ccLOC_TT_CONFLICT_TYPE			'Specifies how to handle conflict checking during an update or delete operation'
#define ccLOC_TT_CONFLICT_CMD			'Specifies a custom command to use for checking update or delete conflicts'
#define ccLOC_TT_NODATA					'Specifies the default value for the lNoData parameter in the CursorFill method'
#define ccLOC_TT_UPDATE_ALL				'Check to update all fields'
#define ccLOC_TT_TIMESTAMP_FIELDS		'Specifies the timestamp fields in the cursor'
#define ccLOC_TT_REFRESH_ALL			'Check to refresh all fields'
