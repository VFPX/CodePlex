SCCTEXT Version 4.0.0.2
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Screen    
[START RESERVED1]
VERSION =   3.00[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSJ
[CLASS] dataenvironment
[BASECLASS] dataenvironment
[OBJNAME] Dataenvironment
[START PROPERTIES]
Top = 0
Left = 0
Width = 0
Height = 0
DataSource = .NULL.
Name = "Dataenvironment"
[END PROPERTIES]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED4]
1[END RESERVED4]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSK
[CLASS] form
[BASECLASS] form
[OBJNAME] VFPTHEMEEXPLORER
[START PROPERTIES]
Height = 612
Width = 673
DoCreate = .T.
AutoCenter = .T.
Caption = "VFP Theme Explorer"
AllowOutput = .F.
_memberdata =     1999<VFPData><memberdata name="ixmldocument" type="property" display="IXMLDocument"/><memberdata name="ixmldomelement" type="property" display="IXMLDOMElement"/><memberdata name="getnodedetails" type="method" display="GetNodeDetails"/><memberdata name="drawresource" type="method" display="DrawResource"/><memberdata name="oselectednode" type="property" display="oSelectedNode"/><memberdata name="oselectednode_assign" type="property" display="oSelectedNode_Assign"/><memberdata name="npartsize" type="property" display="nPartSize"/><memberdata name="npartsize_assign" type="property" display="nPartSize_Assign"/><memberdata name="nimageheight" type="property" display="nImageHeight"/><memberdata name="nimagewidth" type="property" display="nImageWidth"/><memberdata name="lresize" type="property" display="lResize"/><memberdata name="lresize_assign" type="property" display="lResize_Assign"/><memberdata name="onresize" type="method" display="OnResize"/><memberdata name="nsize" type="property" display="nSize"/><memberdata name="render" type="method" display="Render"/><memberdata name="evaluatenode" type="method" display="EvaluateNode"/><memberdata name="cclass" type="property" display="cClass"/><memberdata name="npartid" type="property" display="nPartId"/><memberdata name="nstateid" type="property" display="nStateId"/><memberdata name="ocanvas" type="property" display="oCanvas"/><memberdata name="createcanvas" type="method" display="CreateCanvas"/><memberdata name="resizecanvas" type="method" display="ResizeCanvas"/><memberdata name="drawthemecolors" type="method" display="DrawThemeColors"/><memberdata name="loadtree" type="method" display="LoadTree"/><memberdata name="loadtreeview" type="method" display="LoadTreeView"/><memberdata name="cpart" type="property" display="cPart"/><memberdata name="cpartconstant" type="property" display="cPartConstant"/><memberdata name="nheight" type="property" display="nHeight"/><memberdata name="nwidth" type="property" display="nWidth"/></VFPData>

ixmldomelement = 
oselectednode = .NULL.
npartsize = 2
nimageheight = 22
nimagewidth = 44
lresize = .F.
nsize = 1
cclass = 
npartid = 0
nstateid = 0
ocanvas = .NULL.
cpart = 
cpartconstant = 
nheight = 0
nwidth = 0
Name = "VFPTHEMEEXPLORER"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy

THIS.oCanvas = NULL

DODEFAULT()

IF _VFP.STARTMODE = 4

  QUIT

ENDIF
ENDPROC
PROCEDURE Init
THIS.IXMLDOMELEMENT = CREATEOBJECT("Msxml2.DomDocument.4.0")
THIS.IXMLDOMELEMENT.ASYNC = .F.
THIS.IXMLDOMELEMENT.LOAD(LOCFILE("uxtheme.xml"))

IF NOT EMPTY(THIS.IXMLDOMELEMENT.parseError.errorCode)
	MESSAGEBOX("Failed to load XML.")
	RETURN .F.
ENDIF

DECLARE LONG OpenThemeData IN UXTHEME LONG HWND, STRING classList


* Create a collection for GetThemeColor parameters.
*---------------------------------------------------
THIS.NEWOBJECT("oProps", "COLLECTION")

THIS.oProps.ADD("BORDERCOLOR","3801")
THIS.oProps.ADD("FILLCOLOR","3802")
THIS.oProps.ADD("TEXTCOLOR","3803")
THIS.oProps.ADD("EDGELIGHTCOLOR","3804")
THIS.oProps.ADD("EDGEHIGHLIGHTCOLOR","3805")
THIS.oProps.ADD("EDGESHADOWCOLOR","3806")
THIS.oProps.ADD("EDGEDKSHADOWCOLOR","3807")
THIS.oProps.ADD("EDGEFILLCOLOR","3808")
THIS.oProps.ADD("TRANSPARENTCOLOR","3809")
THIS.oProps.ADD("GRADIENTCOLOR1","3810")
THIS.oProps.ADD("GRADIENTCOLOR2","3811")
THIS.oProps.ADD("GRADIENTCOLOR3","3812")
THIS.oProps.ADD("GRADIENTCOLOR4","3813")
THIS.oProps.ADD("GRADIENTCOLOR5","3814")
THIS.oProps.ADD("SHADOWCOLOR","3815")
THIS.oProps.ADD("GLOWCOLOR","3816")
THIS.oProps.ADD("TEXTBORDERCOLOR","3817")
THIS.oProps.ADD("TEXTSHADOWCOLOR","3818")
THIS.oProps.ADD("GLYPHTEXTCOLOR","3819")
THIS.oProps.ADD("GLYPHTRANSPARENTCOLOR","3820")
THIS.oProps.ADD("FILLCOLORHINT","3821")
THIS.oProps.ADD("BORDERCOLORHINT","3822")
THIS.oProps.ADD("ACCENTCOLORHINT","3823")



THIS.LoadTreeView()

DO FORM ResourceCanvas NAME THIS.oCanvas NOSHOW
SHOW WINDOW ResourceCanvas IN vfpthemeexplorer

THISFORM.ResizeCanvas()
BINDEVENT(THIS, "Resize", THIS, "OnResize", 1)

THIS.oSelectedNode = THISFORM.oTreeView.Nodes(1)

THIS.MINHEIGHT = INT(THIS.HEIGHT / 2)
THIS.MINWIDTH = INT(THIS.WIDTH / 2)

IF _VFP.STARTMODE = 4
	_SCREEN.CLOSABLE = .F.
	ON SHUTDOWN CLEAR EVENTS
	SHOW WINDOW vfpthemeexplorer
	READ EVENTS
ELSE
	SHOW WINDOW vfpthemeexplorer
ENDIF
ENDPROC
PROCEDURE Load
DO LOCFILE("System.prg")
ENDPROC
PROCEDURE createcanvas

SET STEP ON

DO FORM ResourceCanvas NOSHOW

SHOW WINDOW ResourceCanvas IN VFPThemeExplorer

THIS.oCanvas = ResourceCanvas

THIS.oCanvas.oParent = THIS

With THIS.oCanvas

   .Top = THIS.DisplayPane.shpCanvas.Top

   .Left = THIS.DisplayPane.shpCanvas.Left

   .Height = THIS.DisplayPane.shpCanvas.Height

   .Width = THIS.DisplayPane.shpCanvas.Width

ENDWITH
ENDPROC
PROCEDURE drawresource
*!*	TS_MIN Receives the minimum size of a visual style part.
*!*	TS_TRUE Receives the size of the visual style part that will best fit the available space.
*!*	TS_DRAW Receives the size that the theme manager uses to draw a part.
#DEFINE TS_MIN  0
#DEFINE TS_TRUE 1
#DEFINE TS_DRAW 2
#DEFINE S_OK 0

LPARAMETERS cClass, nPartId, nStateId, nTop, nLeft

LOCAL cUnicodeClass AS STRING, ;
  nHtheme AS INTEGER, ;
  nHdc AS INTEGER, ;
  nPrect AS INTEGER, ;
  nSize AS INTEGER, ;
  cPartSize AS STRING, ;
  nWidth AS LONG, ;
  nHeight AS LONG, ;
  nResult AS INTEGER, ;
  nOldAnchor AS INTEGER, ;
  oCanvas AS FORM, ;
  oResource AS imgThemeBase IN GdiPlusX.vcx

oResource = NULL
cUnicodeClass = STRCONV(m.cClass + 0h00, 5)
nPrect = 0
nSize = INT(THISFORM.nSize)
cPartSize = SPACE(8)
oCanvas = THISFORM.oCanvas
nHtheme = OpenThemeData(0, m.cUnicodeClass)

IF m.nHtheme > 0

  oCanvas.NEWOBJECT("oResource" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "imgThemeBase", "GdiPlusX.vcx")
  oResource = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)
  nHdc = oResource.hdc
  nResult = GetThemePartSize(nHtheme, nHdc, nPartId, nStateId, @nPrect, nSize, @cPartSize)

  IF m.nResult == S_OK

    *!*	The SIZE structure specifies the width and height of a rectangle.

    *!*	typedef struct tagSIZE {
    *!*	  LONG cx;
    *!*	  LONG cy;
    *!*	} SIZE, *PSIZE;

    *!*	Members
    *!*	cx    Specifies the rectangle's width. The units depend on which function uses this.
    *!*	cy    Specifies the rectangle's height. The units depend on which function uses this.

    IF m.nSize = 1 AND THISFORM.lResize
		nWidth = THISFORM.nImageWidth
		nHeight = THISFORM.nImageHeight
    ELSE
		nWidth = INT(CTOBIN(LEFT(cPartSize, 4),"RS"))
		nHeight = INT(CTOBIN(RIGHT(cPartSize, 4),"RS"))
    ENDIF

    oResource.TOP = m.nTop
    oResource.LEFT = m.nLeft
    oResource.WIDTH = m.nWidth
    oResource.HEIGHT = m.nHeight
    oResource.themeclass = m.cUnicodeClass
    oResource.themepart = m.nPartId
    oResource.themestate = m.nStateId
    oResource.ANCHOR = 3
    oResource.VISIBLE = .T.

  ELSE

    oResource = NULL
    oCanvas.REMOVEOBJECT(oCanvas.CONTROLS(oCanvas.CONTROLCOUNT).NAME)

  ENDIF

  CloseThemeData(m.nHtheme)

ENDIF

RETURN oResource
ENDPROC
PROCEDURE drawthemecolors

LPARAMETERS nTop as Integer

nTheme = OpenThemeData(0, STRCONV(THISFORM.cClass + 0h00, 5))

IF nTheme > 0

  FOR nPropID = 3801 TO 3823

    nColor = 0

    *nReturn = GetThemeColor(m.nTheme, oParams.nPartId, oParams.nStateId, m.nPropID, @m.nColor)
    nReturn = GetThemeColor(m.nTheme, THISFORM.nPartId, THISFORM.nStateId, m.nPropID, @m.nColor)

    IF m.nReturn = 0 && The color exists.

      * Add a shape to display the color.
      *------------------------------------------
      oCanvas.ADDOBJECT("oColor" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "shape")

      oColor = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)

      oColor.TOP = m.nTop

      oColor.HEIGHT = 24

      oColor.WIDTH = 96

      oColor.LEFT = 4

      oColor.BACKCOLOR = m.nColor

      oColor.VISIBLE = .T.

      oCanvas.ADDOBJECT("oColor" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "textbox")

      * Add a text box to provide the color value for copy/paste.
      *------------------------------------------------------------
      oText = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)

      oText.TOP = m.nTop

      oText.HEIGHT = 24

      oText.LEFT = oColor.LEFT + oColor.WIDTH + 4

      oText.VALUE = TRANSFORM(m.nColor)

      oText.WIDTH = 80

      oText.VISIBLE = .T.

      oCanvas.ADDOBJECT("oColor" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "label")

      * Add a label with the color's "name".
      *---------------------------------------
      oLabel = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)

      oLabel.TOP = m.nTop

      oLabel.HEIGHT = 24

      oLabel.WIDTH = 156

      oLabel.LEFT = oText.LEFT + oText.WIDTH + 4

      oLabel.CAPTION  = THIS.oProps(TRANSFORM(m.nPropID))

      oLabel.BACKSTYLE = 0

      oLabel.VISIBLE = .T.

      nTop = m.nTop + oColor.HEIGHT + 4

    ENDIF

  ENDFOR

  CloseThemeData(m.nTheme)

ENDIF
ENDPROC
PROCEDURE evaluatenode

LPARAMETERS oNode AS MSComctlLib.NODE

IF ISNULL(oNode)

  RETURN

ENDIF

LOCAL cKey AS STRING, ;
  nPosition AS INTEGER, ;
  cClass AS STRING, ;
  cPart AS STRING, ;
  cState AS STRING, ;
  nPartId AS INTEGER , ;
  nStateId  AS INTEGER, ;
  oReturn AS OBJECT

oReturn = CREATEOBJECT("EMPTY")
cKey = oNode.KEY
cClass = ""
cPart = ""
cState = ""
nPartId  = -1
nStateId  = -1

* what type of key is it?
*--------------------------
DO CASE

  CASE LEFT(m.cKey, 1) = "C" && class

    cClass = SUBSTR(m.cKey, 2)

  CASE LEFT(m.cKey, 1) = "P" && part

    cClass = SUBSTR(oNode.PARENT.KEY, 2)

    nPosition = AT(":", m.cKey)

    cPart = SUBSTR(m.cKey, 2, nPosition - 3)

    nPartId  = VAL(SUBSTR(m.cKey, m.nPosition + 1))

  CASE LEFT(m.cKey, 1) = "S" && state

    cClass = SUBSTR(oNode.PARENT.PARENT.KEY, 2)

    nPosition =  AT(":", oNode.PARENT.KEY)

    cPart = SUBSTR(oNode.PARENT.KEY, 2, nPosition - 3)

    nPartId  = VAL(SUBSTR(oNode.PARENT.KEY, m.nPosition + 1))

    nPosition = AT(":", m.cKey)

    cState = SUBSTR(m.cKey, 2, nPosition - 3)

    nStateId  = VAL(SUBSTR(m.cKey, m.nPosition + 1))

ENDCASE

ADDPROPERTY(oReturn,"cClass", m.cClass)
ADDPROPERTY(oReturn,"cPart", m.cPart)
ADDPROPERTY(oReturn,"cState", m.cState)
ADDPROPERTY(oReturn,"nPartId", INT(m.nPartId))
ADDPROPERTY(oReturn,"nStateId", INT(m.nStateId))

RETURN oReturn

ENDPROC
PROCEDURE loadtreeview
#DEFINE tvwChild 4

LOCAL oXmlDom AS Msxml2.DOMDocument

oXmlDom = THISFORM.IXMLDOMELEMENT

LOCAL cClass, cPart, cState, cId AS STRING
LOCAL oClasses, oParts, oStates, oClassElement, oPartElement, oStateElement AS Msxml2.IXMLDOMNode
LOCAL oRootNode, oClassNode, oPartNode AS MSComctlLib.NODE
LOCAL oTreeView AS MSComctlLib.ITreeView

oTreeView = THISFORM.oTreeView
oClasses = oXmlDom.selectNodes("ThemeData/Class")

FOR EACH oClassElement IN oClasses
  cClass = oClassElement.GetAttribute("name")
  oClassNode = oTreeView.Nodes.ADD(, , "C" + m.cClass, m.cClass)
  oParts = oClassElement.selectNodes("Part")

  FOR EACH oPartElement IN oParts
    cPart = oPartElement.GetAttribute("name")
    cId = oPartElement.GetAttribute("id")
    oPartNode = oTreeView.Nodes.ADD(oClassNode, tvwChild, "P" + cPart + "I:" + cId, cPart + " (" + cId + ")")
    oStates = oPartElement.selectNodes("State")

    FOR EACH oStateElement IN oStates
      cState = oStateElement.GetAttribute("name")
      cId = oStateElement.GetAttribute("id")
      oTreeView.Nodes.ADD(oPartNode, tvwChild, "S" + cState + "P" + cPart + "I:" + cId, cState + " (" + cId + ")")
    ENDFOR

  ENDFOR

ENDFOR
ENDPROC
PROCEDURE lresize_assign

LPARAMETERS lResize

THIS.lResize = m.lResize

*THISFORM.nPartSize = THISFORM.nPartSize

ENDPROC
PROCEDURE npartsize_assign


LPARAMETERS nPartSize

LOCAL cClass AS STRING

IF m.nPartSize = 3

  THIS.lResize = .T.
  THISFORM.nSize = 1

  *THISFORM.DisplayPane.txtHeight.ENABLED = .T.
  *THISFORM.DisplayPane.TXTWIDTH.ENABLED = .T.

ELSE

  THIS.lResize = .F.

  *THISFORM.DisplayPane.txtHeight.ENABLED = .F.
  *THISFORM.DisplayPane.TXTWIDTH.ENABLED = .F.

  THISFORM.nSize = INT(m.nPartSize - 1)

ENDIF

THIS.nPartSize = m.nPartSize

THIS.oSelectedNode = THIS.oSelectedNode

*THIS.DrawResource(THISFORM.cClass, THISFORM.DisplayPane.imgThemeResource.themepart, THISFORM.DisplayPane.imgThemeResource.themestate)
*THIS.Render()

ENDPROC
PROCEDURE onresize

LOCAL lOldLockScreen AS Logical, ;
  nOldAnchor AS INTEGER, ;
  nLeft, nWidth, nHeight as Integer

nLeft = 0

nHeight = THISFORM.Height

lOldLockScreen = THISFORM.LOCKSCREEN

THISFORM.LOCKSCREEN = .T.

nOldAnchor = THISFORM.oTreeView.ANCHOR

THISFORM.oTreeView.ANCHOR = 0

nHalf = INT(THIS.WIDTH / 2)

IF THISFORM.oTreeView.WIDTH > m.nHalf

  THISFORM.oTreeView.WIDTH = m.nHalf - THISFORM.SPLITBAR.WIDTH

  THISFORM.SPLITBAR.LEFT = THISFORM.oTreeView.WIDTH

ELSE

  THISFORM.oTreeView.WIDTH = THISFORM.SPLITBAR.LEFT

ENDIF

THISFORM.oTreeView.Height = m.nHeight

nWidth = THISFORM.SPLITBAR.LEFT

THISFORM.oTreeView.WIDTH = m.nWidth

THISFORM.oTreeView.ANCHOR = m.nOldAnchor

nOldAnchor = THISFORM.DisplayPane.ANCHOR

THISFORM.DisplayPane.ANCHOR = 0

THISFORM.DisplayPane.LEFT = THISFORM.SPLITBAR.LEFT + THISFORM.SPLITBAR.WIDTH

THISFORM.DisplayPane.WIDTH = THISFORM.WIDTH - THISFORM.DisplayPane.LEFT

THISFORM.DisplayPane.Height = m.nHeight

THISFORM.DisplayPane.ANCHOR = m.nOldAnchor

THISFORM.ResizeCanvas()

THISFORM.LOCKSCREEN = m.lOldLockScreen

ENDPROC
PROCEDURE oselectednode_assign

LPARAMETERS oNode AS MSComctlLib.NODE

LOCAL oParams AS OBJECT

IF ISNULL(oNode)

  RETURN

ENDIF

oParams = THISFORM.EvaluateNode(oNode)

THISFORM.cClass = oParams.cClass
THISFORM.cPart = TRANSFORM(oParams.nPartId)
THISFORM.cPartConstant = oParams.cPart
THISFORM.nPartId = oParams.nPartId
THISFORM.nStateId = oParams.nStateId

THISFORM.DisplayPane.lblPart.VISIBLE = THISFORM.nPartId != -1

THISFORM.DisplayPane.txtPart.VISIBLE = THISFORM.nPartId != -1

THISFORM.DisplayPane.txtPartConstant.VISIBLE = THISFORM.nPartId != -1

THISFORM.DisplayPane.txtPart.Refresh()

THISFORM.DisplayPane.txtPartConstant.Refresh()

THISFORM.DisplayPane.txtClass.Refresh()

THISFORM.oSelectedNode = oNode

THISFORM.RENDER()

ENDPROC
PROCEDURE render
LOCAL oChildNode AS MSComctlLib.NODE, ;
  oGrandChildNode AS MSComctlLib.NODE, ;
  oNode AS MSComctlLib.NODE, ;
  nLeft, nTop, nMaxHeight AS INTEGER, ;
  oResource AS imgThemeBase IN GdiPlusX.vcx, ;
  oCanvas AS FORM, ;
  lOldLockScreen AS Logical, ;
  oColor AS SHAPE, ;
  nColor AS INTEGER

oCanvas = THISFORM.oCanvas
lOldLockScreen = oCanvas.LOCKSCREEN

oCanvas.LOCKSCREEN = .T.

IF THIS.nPartSize != 3
	THISFORM.nImageWidth = 0
	THISFORM.nImageHeight = 0
ENDIF

nLeft = 4
nTop = 4
nMaxHeight = 0
oNode = THISFORM.oSelectedNode

* Clear all existing controls
*-----------------------------
DO WHILE oCanvas.CONTROLCOUNT > 0
	oCanvas.REMOVEOBJECT(oCanvas.CONTROLS[1].NAME)
ENDDO

ACTIVATE WINDOW resourcecanvas

DO CASE

  CASE THISFORM.nPartId <= 0

    * no part or state specified
    * draw parts vertically and states horizontally
    *-----------------------------------------------
    oChildNode = oNode.CHILD

    FOR nChild = 1 TO oNode.children

      oGrandChildNode = oChildNode.CHILD

      FOR nGrandChild = 1 TO oChildNode.children
        oParams = THISFORM.EvaluateNode(oGrandChildNode)
        oResource = THISFORM.DrawResource(oParams.cClass, oParams.nPartId, oParams.nStateId, m.nTop, m.nLeft)

        IF !ISNULL(oResource)
			nLeft = oResource.LEFT + oResource.WIDTH + 4
			nMaxHeight = IIF(oResource.HEIGHT > nMaxHeight, oResource.HEIGHT, nMaxHeight)
			oResource = NULL
		ENDIF

        oGrandChildNode = oGrandChildNode.NEXT

      ENDFOR

      nTempLeft = nLeft  + 4&&oCanvas.CONTROLS(oCanvas.CONTROLCOUNT).WIDTH + 4

      * Add a state value text box.
      *------------------------------------
      oCanvas.ADDOBJECT("oText" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "textbox")

      oText = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)
      oText.TOP = m.nTop
      oText.HEIGHT = 23
      oText.LEFT = m.nTempLeft
      oText.VALUE = oParams.cPart
      oText.WIDTH = (LEN(oText.VALUE) * (FONTMETRIC(6) + 4)) + 5&&96
      oText.VISIBLE = .T.

      * Start a new row
      *----------------------------
      nTop = nTop + MAX(oText.Height, nMaxHeight) + 4
      nLeft = 4
      nMaxHeight = 0
      oChildNode = oChildNode.NEXT

    ENDFOR

  CASE THISFORM.nStateId <= 0

    * no state specified
    * draw the states vertically
    *-------------------------------
    oChildNode = oNode.CHILD

    FOR nChild = 1 TO oNode.children

      oParams = THISFORM.EvaluateNode(oChildNode)
      oResource = THISFORM.DrawResource(oParams.cClass, oParams.nPartId, oParams.nStateId, m.nTop, m.nLeft)
      nTempLeft = oResource.LEFT + oResource.WIDTH + 4

      * Add a state value text box.
      *------------------------------------
      oCanvas.ADDOBJECT("oText" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "textbox")
      oText = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)
      oText.TOP = m.nTop
      oText.HEIGHT = 23
      oText.LEFT = m.nTempLeft
      oText.VALUE = TRANSFORM(oParams.nStateID)
      oText.WIDTH = (LEN(oText.VALUE) * FONTMETRIC(6)) + 15 &&96
      oText.VISIBLE = .T.

      nTempLeft = oText.LEFT + oText.WIDTH + 4

      * Add a state constant text box.
      *------------------------------------
      oCanvas.ADDOBJECT("oText" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "textbox")
      oText = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)
      oText.TOP = m.nTop
      oText.HEIGHT = 23
      oText.LEFT = m.nTempLeft
      oText.VALUE = oParams.cState
      oText.WIDTH = LEN(oText.VALUE) * (FONTMETRIC(6) + 4) &&96
      oText.VISIBLE = .T.

      THISFORM.nImageWidth = oResource.WIDTH
      THISFORM.nImageHeight = oResource.HEIGHT

      IF !ISNULL(oResource)

        * Start a new row
        *----------------------------
        nTop = nTop + MAX(oResource.HEIGHT, 23) + 4
        oResource = NULL

      ENDIF

      oChildNode = oChildNode.NEXT

    ENDFOR

  OTHERWISE

    * Part and state are specified
    * Draw the resource
    *-----------------------------------------
    oParams = THISFORM.EvaluateNode(oNode)
    oResource = THISFORM.DrawResource(oParams.cClass, oParams.nPartId, oParams.nStateId, m.nTop, m.nLeft)

    THISFORM.nImageWidth = oResource.WIDTH
    THISFORM.nImageHeight = oResource.HEIGHT

    nTempLeft = oResource.LEFT + oResource.WIDTH + 4

    * Add a state value text box.
    *------------------------------------
    oCanvas.ADDOBJECT("oText" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "textbox")
    oText = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)
    oText.TOP = m.nTop
    oText.HEIGHT = 23
    oText.LEFT = m.nTempLeft
    oText.VALUE = TRANSFORM(oParams.nStateID)
    oText.WIDTH = (LEN(oText.VALUE) * FONTMETRIC(6)) + 15 &&96
    oText.VISIBLE = .T.

    nTempLeft = oText.LEFT + oText.WIDTH + 4

    * Add a state constant text box.
    *------------------------------------
    oCanvas.ADDOBJECT("oText" + TRANSFORM(oCanvas.CONTROLCOUNT + 1), "textbox")

    oText = oCanvas.CONTROLS(oCanvas.CONTROLCOUNT)
    oText.TOP = m.nTop
    oText.HEIGHT = 23
    oText.LEFT = m.nTempLeft
    oText.VALUE = oParams.cState
    oText.WIDTH = LEN(oText.VALUE) * (FONTMETRIC(6) + 4) &&96
    oText.VISIBLE = .T.

    nTop = m.nTop + MAX(oResource.HEIGHT, 23) + 4

ENDCASE

THISFORM.cClass = oParams.cClass
THISFORM.nPartId = oParams.nPartId
THISFORM.nStateId = oParams.nStateId

* Draw theme colors.
*---------------------------------------
THISFORM.DrawThemeColors(m.nTop)

oCanvas.LOCKSCREEN = m.lOldLockScreen
THISFORM.DisplayPane.txtHeight.REFRESH()
THISFORM.DisplayPane.TXTWIDTH.REFRESH()
ENDPROC
PROCEDURE resizecanvas

LOCAL oCanvas as Form, ;
  lOldLockScreen as Logical, ;
  oShape as Shape

oCanvas = THIS.oCanvas

oShape = THIS.DisplayPane.shpCanvas

lOldLockScreen = oCanvas.LockScreen

oCanvas.LockScreen = .T.

oCanvas.TOP = oShape.TOP

oCanvas.LEFT = oShape.LEFT + THIS.DisplayPane.LEFT

oCanvas.HEIGHT = oShape.HEIGHT

* For reasons that I cannot discern,
* the canvas window extends beyond
* the width of the parent window.
*-------------------------------------
*!*	IF oCanvas.WIDTH + oShape.Left > oShape.Parent.width ;
*!*	  OR oShape.Parent.width > THISFORM.Width - oShape.Parent.Left

*!*	  *SET STEP ON

*!*	  oCanvas.WIDTH = oShape.WIDTH - oShape.Left


*!*	ELSE

  *oCanvas.WIDTH = oShape.WIDTH

  oCanvas.WIDTH = oShape.Parent.Width - (2 * oShape.Left)

*!*	ENDIF

ACTIVATE WINDOW resourcecanvas

oCanvas.LockScreen = m.lOldLockScreen


ENDPROC
[END METHODS]
[START RESERVED3]
_memberdata XML Metadata for customizable properties
ixmldomelement Reference to the IXMLDOMElement object after successful execution of LoadXML() method or Attach method. NULL when not populated.
oselectednode
npartsize
nimageheight
nimagewidth
lresize
nsize
cclass
npartid
nstateid
ocanvas
cpart
cpartconstant
nheight
nwidth
*drawresource 
*oselectednode_assign 
*npartsize_assign 
*lresize_assign 
*onresize 
*render Occurs when Report Engine is ready to provide output for each layout object in a band.
*evaluatenode 
*createcanvas 
*resizecanvas 
*drawthemecolors 
*loadtreeview 
[END RESERVED3]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSL
[CLASS] olecontrol
[BASECLASS] olecontrol
[OBJNAME] oTreeView
[PARENT] VFPTHEMEEXPLORER
[START PROPERTIES]
Top = 0
Left = 0
Height = 612
Width = 264
Anchor = 7
Name = "oTreeView"
[END PROPERTIES]
[START METHODS]
PROCEDURE NodeClick
*** ActiveX Control Event ***
LPARAMETERS NODE

THISFORM.oSelectedNode = NODE

ENDPROC
[END METHODS]
[BINSTART OLE]
CHECKSUM=9013
[BINEND OLE]
[BINSTART OLE2]
CHECKSUM=26800
[BINEND OLE2]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WK10QMNA
[CLASS] container
[BASECLASS] container
[OBJNAME] DisplayPane
[PARENT] VFPTHEMEEXPLORER
[START PROPERTIES]
Anchor = 15
Top = 0
Left = 267
Width = 406
Height = 612
BackStyle = 0
BorderWidth = 0
Name = "DisplayPane"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WK10QMNT
[CLASS] optiongroup
[BASECLASS] optiongroup
[OBJNAME] Optiongroup1
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
ButtonCount = 3
Anchor = 3
BackStyle = 0
Value = 1
ControlSource = "THISFORM.nPartSize"
Height = 90
Left = 12
Top = 12
Width = 94
Name = "Optiongroup1"
Option1.Caption = "Minimum"
Option1.Value = 1
Option1.Height = 27
Option1.Left = 5
Option1.SpecialEffect = 0
Option1.Style = 1
Option1.Top = 5
Option1.Width = 84
Option1.Name = "Option1"
Option2.Caption = "Default"
Option2.Value = 2
Option2.Height = 27
Option2.Left = 5
Option2.Style = 1
Option2.Top = 33
Option2.Width = 84
Option2.Name = "Option2"
Option3.Caption = "Fill"
Option3.Value = 3
Option3.Height = 27
Option3.Left = 5
Option3.Style = 1
Option3.Top = 61
Option3.Width = 84
Option3.Name = "Option3"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WK10QMNU
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] txtHeight
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Anchor = 3
ControlSource = "THISFORM.nImageHeight"
Height = 23
Left = 158
Top = 55
Width = 100
Name = "txtHeight"
[END PROPERTIES]
[START METHODS]
PROCEDURE Valid

THISFORM.nPartSize = THISFORM.nPartSize


ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSJ
[CLASS] label
[BASECLASS] label
[OBJNAME] Label1
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Anchor = 3
BackStyle = 0
Caption = "Height"
Height = 17
Left = 116
Top = 58
Width = 40
Name = "Label1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WK10QMNW
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] txtWidth
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Anchor = 3
ControlSource = "THISFORM.nImageWidth"
Height = 23
Left = 158
Top = 80
Width = 100
Name = "txtWidth"
[END PROPERTIES]
[START METHODS]
PROCEDURE Valid

THISFORM.nPartSize = THISFORM.nPartSize


ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WK10QMNX
[CLASS] label
[BASECLASS] label
[OBJNAME] Label2
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Anchor = 3
BackStyle = 0
Caption = "Width"
Height = 17
Left = 116
Top = 83
Width = 40
Name = "Label2"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WL174EIU
[CLASS] shape
[BASECLASS] shape
[OBJNAME] shpCanvas
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Top = 108
Left = 9
Height = 492
Width = 384
Anchor = 15
Visible = .F.
BackColor = 255,255,255
Name = "shpCanvas"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSJ
[CLASS] label
[BASECLASS] label
[OBJNAME] Label3
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Anchor = 3
BackStyle = 0
Caption = "Class"
Height = 17
Left = 115
Top = 8
Width = 40
Name = "Label3"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSK
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] txtClass
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
ControlSource = "THISFORM.cClass"
Height = 23
Left = 157
Top = 5
Width = 100
Name = "txtClass"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1XX0STF54
[CLASS] label
[BASECLASS] label
[OBJNAME] lblPart
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
Anchor = 3
BackStyle = 0
Caption = "Part"
Height = 17
Left = 116
Top = 33
Visible = .F.
Width = 40
Name = "lblPart"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WG1E5WSJ
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] txtPart
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
ControlSource = "THISFORM.cPart"
Height = 23
Left = 158
Top = 30
Visible = .F.
Width = 31
Name = "txtPart"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1XX0WPLHF
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] txtPartConstant
[PARENT] VFPTHEMEEXPLORER.DisplayPane
[START PROPERTIES]
ControlSource = "THISFORM.cPartConstant"
Height = 23
Left = 191
Top = 30
Visible = .F.
Width = 132
Name = "txtPartConstant"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1WK10QMNZ
[CLASS] splitter
[CLASSLOC] splitter.vcx
[BASECLASS] shape
[OBJNAME] SplitBar
[PARENT] VFPTHEMEEXPLORER
[START PROPERTIES]
Top = 0
Left = 264
Height = 612
Anchor = 5
rangemax = 0.5
Name = "SplitBar"
[END PROPERTIES]
[START METHODS]
PROCEDURE aftermousedown

THISFORM.oCanvas.Visible = .T.

ACTIVATE WINDOW resourcecanvas

THISFORM.oCanvas.LockScreen = THIS.lOldLockScreen
ENDPROC
PROCEDURE beforemousedown

THIS.AddProperty("lOldLockScreen", THISFORM.oCanvas.LockScreen)

THISFORM.oCanvas.LockScreen = .T.

THISFORM.oCanvas.Visible = .F.

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[EOF]
