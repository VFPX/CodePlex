*       *********************************************************
*       *                                                         
*       * 29/12/2013             MENU2.MPR              04:05:02  
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (C) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This PROGRAM was automatically generated BY GENMENU.    
*       *                                                         
*       *********************************************************

* To attach this menu to your Top-Level form, 
* call it from the Init event of the form:

* Syntax: DO <mprname> WITH <oFormRef> [,<cMenuname>|<lRename>][<lUniquePopups>]

*	oFormRef - form object reference (THIS)
*	cMenuname - name for menu (this is required for Append menus - see below)
*	lRename - renames Name property of your form
*	lUniquePopups - determines whether to generate unique ids for popup names
			
* 	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.
*	ENDPROC

* Use the optional 2nd parameter if you plan on running multiple instances
* of your Top-Level form. The preferred method is to create an empty string
* variable and pass it by reference so you can receive the form name after
* the MPR file is run. You can later use this reference to destroy the menu.

*	PROCEDURE Init
*		LOCAL cGetMenuName
*		cGetMenuName = ""
*		DO mymenu.mpr WITH THIS, m.cGetMenuName
*	ENDPROC

* The logical lRename parameter will change the name property of your 
* form to the same name given the menu and may cause conflicts in your 
* code if you directly reference the form by name.

* You will also need to remove the menu when the form is destroyed so that it does 
* not remain in memory unless you wish to reactivate it later in a new form.

* If you passed the optional lRename parameter as .T. as in the above example, 
* you can easily remove the menu in the form's Destroy event as shown below.
* This strategy is ideal when using multiple instances of Top-Level forms.

*	example:

*	PROCEDURE Destroy
*		RELEASE MENU (THIS.Name) EXTENDED
*	ENDPROC

* Using Append/Before/After location options:

*   You might want to append a menu to an existing Top-Level form by setting 
*   the Location option in the General Options dialog. In order to do this, you 
*   must pass the name of the menu in which to attach the new one. The second
*   parameter is required here. If you originally created the menu with the lRename 
*   parameter = .T., then you can update the menu with code similar to the following:

*	example:

*	DO mymenu2.mpr WITH THISFORM,THISFORM.name
*
* Using lUniquePopups:

*   If you are running this menu multiple times in your application, such as in multiple 
*   instances of the same top-level form, you should pass .T. to the lUniquePopups 
*   parameter so that unique popup names are generated to avoid possible conflicts.

*	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.,.T.
*	ENDPROC
*
* Note: Parm4-Parm9 are not reserved and freely available for use with your menu code.
*

LPARAMETERS oFormRef, getMenuName, lUniquePopups, parm4, parm5, parm6, parm7, parm8, parm9
LOCAL cMenuName, nTotPops, a_menupops, cTypeParm2, cSaveFormName
IF TYPE("m.oFormRef") # "O" OR ;
  LOWER(m.oFormRef.BaseClass) # 'form' OR ;
  m.oFormRef.ShowWindow # 2
	MESSAGEBOX([This menu can only be called from a Top-Level form. Ensure that your form's ShowWindow property is set to 2. Read the header section of the menu's MPR file for more details.])
	RETURN
ENDIF
m.cTypeParm2 = TYPE("m.getMenuName")
m.cMenuName = SYS(2015)
m.cSaveFormName = m.oFormRef.Name
IF m.cTypeParm2 = "C" OR (m.cTypeParm2 = "L" AND m.getMenuName)
	m.oFormRef.Name = m.cMenuName
ENDIF
IF m.cTypeParm2 = "C" AND !EMPTY(m.getMenuName)
	m.cMenuName = m.getMenuName
ENDIF
DIMENSION a_menupops[4]
IF TYPE("m.lUniquePopups")="L" AND m.lUniquePopups
	FOR nTotPops = 1 TO ALEN(a_menupops)
		a_menupops[m.nTotPops]= SYS(2015)
	ENDFOR
ELSE
	a_menupops[1]="opcióna_cs"
	a_menupops[2]="opcióna1"
	a_menupops[3]="opcióna2su"
	a_menupops[4]="_3yl0d68e0"
ENDIF


*       *********************************************************
*       *                                                         
*       *                        Setup Code                       
*       *                                                         
*       *********************************************************
*

*-- Setup code


*       *********************************************************
*       *                                                         
*       *                      Menu Definition                    
*       *                                                         
*       *********************************************************
*

LOCAL lHasNewMenu
lHasNewMenu = (TYPE("CNTPAD(m.cMenuName)") # "N")
IF m.lHasNewMenu
	DEFINE MENU (m.cMenuName) IN (m.oFormRef.Name) BAR
ENDIF

DEFINE PAD _3ym146qi4 OF (m.cMenuName) PROMPT "Opción A con submenú" COLOR SCHEME 3 ;
	NEGOTIATE  NONE, LEFT ;
	KEY DEL, "Pulsar <DEL>" ;
	SKIP FOR SKIP_FOR() ;
	MESSAGE "Mensaje para Opción A con submenú"
DEFINE PAD opc_b OF (m.cMenuName) PROMPT "Opción B con comando" COLOR SCHEME 3 ;
	KEY CTRL+B, "Pulse CTRL+B" ;
	SKIP FOR NOT glEnabled_Opc_B ;
	MESSAGE "Mensaje para Opción B con Command"
ON PAD _3ym146qi4 OF (m.cMenuName) ACTIVATE POPUP (a_menupops[1])
ON SELECTION PAD opc_b OF (m.cMenuName) WAIT WINDOW "Opción B"

DEFINE POPUP (a_menupops[1]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[1]) PROMPT "Opción A-1" ;
	PICTURE "..\..\foxunit\fxuacknowledgements.bmp"
DEFINE BAR 2 OF (a_menupops[1]) PROMPT "Opción A-2"
ON BAR 1 OF (a_menupops[1]) ACTIVATE POPUP (a_menupops[2])
ON BAR 2 OF (a_menupops[1]) ACTIVATE POPUP (a_menupops[3])

DEFINE POPUP (a_menupops[2]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR Shortcut_Menu_Title OF (a_menupops[2]) PROMPT "OpciónA-1-Sub" ;
	PICTURE "..\..\foxunit\fxuacknowledgements.bmp"
ON SELECTION BAR Shortcut_Menu_Title OF (a_menupops[2]) wait window "Ejecuta Comando o función para Opción A-1"

DEFINE POPUP (a_menupops[3]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[3]) PROMPT "Opción A-2-Sub.1" ;
	MESSAGE "Message para Opción A-2-Sub.1 (Tipo Procedure)"
DEFINE BAR 2 OF (a_menupops[3]) PROMPT "O\<pción A-2-Sub.2" ;
	KEY CTRL+E, "Pulsar CTRL+E" ;
	SKIP FOR NOT glEnabled_Opc_A_2_Sub_2 ;
	MESSAGE "Mensaje para _Opc_A_2_Sub_2 (Tipo Command y con Bar # 2)"
DEFINE BAR 3 OF (a_menupops[3]) PROMPT "Opción A-2-Sub.4" ;
	MESSAGE "Message para Opción A-2-Sub.4 (Tipo Submenu)"
DEFINE BAR _MFI_SYSPRINT OF (a_menupops[3]) PROMPT "Opción A-2-Sub.3" ;
	KEY CTRL+R, "CTRL+R" ;
	SKIP FOR NOT glEnabled_Opc_A_2_Sub_3 ;
	PICTRES _mfi_sysprint ;
	MESSAGE "Message para Opción A-2-Sub.3 (Tipo Bar#)"
ON SELECTION BAR 1 OF (a_menupops[3]) ;
	DO MENU1_OPCIÓN_A_2_SUB_SNIPPET ;
	IN LOCFILE("FOXBIN2PRG\TESTS\DATOS_READONLY\MENU2" ,"MPX;MPR|FXP;PRG" ,"WHERE is MENU2?")
ON SELECTION BAR 2 OF (a_menupops[3]) wait window "Ejecuta Comando o función para Opción A-2-Sub.2"
ON BAR 3 OF (a_menupops[3]) ACTIVATE POPUP (a_menupops[4])

DEFINE POPUP (a_menupops[4]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[4]) PROMPT "FIN!" ;
	MESSAGE "Message para FIN! (Tipo Command)"
ON SELECTION BAR 1 OF (a_menupops[4]) QUIT

ON SELECTION POPUP ALL *- Menu bar procedure
ON SELECTION POPUP (a_menupops[1]) *-- PROCEDURE Le cambié el nombre!
ON SELECTION POPUP (a_menupops[4]) *-- Sin procedure, pero podria ir aquí
ACTIVATE MENU (m.cMenuName) NOWAIT

IF m.cTypeParm2 = "C"
	m.getMenuName = m.cMenuName
	m.oFormRef.Name = m.cSaveFormName 
ENDIF


*       *********************************************************
*       *                                                         
*       *                 Cleanup Code & Procedures               
*       *                                                         
*       *********************************************************
*

*-- Cleanup code


*       *********************************************************
*       *                                                         
*       * MENU1_OPCI  ON SELECTION BAR 1 OF POPUP opcióna2su      
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  MENU2.MPR,            Record:   10          
*       * Called By:  ON SELECTION BAR 1 OF POPUP opcióna2su      
*       * Prompt:     Opción A-2-Sub.1                            
*       * Snippet:    1                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE MENU1_OPCIÓN_A_2_SUB_SNIPPET
*PROCEDURE Menu1_Opción_A_2_Sub
	*-- Mi procedure!
*ENDPROC

